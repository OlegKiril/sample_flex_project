<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:components="components.*"
			   minWidth="1024" minHeight="768" creationComplete="employeeService.send()"
			   currentState="loginState" skinClass="skins.AppSkin"
			   viewSourceURL="srcview/index.html">
	
	<fx:Script>
		<![CDATA[
			import events.ShowPreview;
			
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			
			import skins.AppSkin;
			
			[Bindable]
			private var usersData:ArrayCollection;
									
			private function employeeService_resultHandler(event:ResultEvent):void{
				usersData = event.result.usersData.userData;
			}
			
			private function chooseEmployee_showPreviewHandler(event:ShowPreview):void{		
				var myPopupComponent:MyPopupComponent = new MyPopupComponent;
				myPopupComponent.userData = event.userData;
				myPopupComponent.usersData = usersData;
				myPopupComponent.open(this);			
			}
			
			private function attemptLogin():void{
				if(username.text==usersData[0].login && password.text==usersData[0].password){
					currentState='portalState';
				}
			}			  
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:HTTPService id="employeeService" 
					   url="data/usersData.xml"
					   result="employeeService_resultHandler(event)" />
		
		<components:MyPopupComponent id="popup" />
		
				
	</fx:Declarations>
	
	<s:states>
		<s:State name="portalState"  />
		<s:State name="loginState" />
	</s:states>
			
	<!--These are the transitions between the portalState and the loginState.-->
	<s:transitions>
		
		<!--Transition when a user logs in to the application.-->
		<s:Transition fromState="loginState" toState="portalState">
			<s:Sequence>
				<s:Parallel>
					<s:Fade target="{login}"/>			
					<s:Move target="{login}" 
							xTo="-266"/>									
				</s:Parallel>
				
				<!--Controls when the view state change defined by a RemoveChild property occurs.-->
				<s:RemoveAction target="{login}"/>				
				    <s:Fade target="{navigationTab}"/>							
					<s:AddAction target="{navigationTab}"/>					
					<s:Move target="{navigationTab}"
							xFrom="1500" />				
			</s:Sequence>
		</s:Transition>
	</s:transitions>
	
	<mx:TabNavigator id="navigationTab" includeIn="portalState" width="600" height="500" x="50" y="20" >
		<s:NavigatorContent label="Graph">
			
			<s:BorderContainer x="119" y="23" width="272" height="380" borderColor="#808080" borderWeight="2"
							   cornerRadius="5" textAlign="center">
				
				<s:layout>
					<s:TileLayout horizontalAlign="left" orientation="columns" verticalAlign="top"/>
				</s:layout>
				<components:GraphTab id="graphTab"
									 usersData="{usersData}"
									 x="30" y="90"
									 showPreview="chooseEmployee_showPreviewHandler(event)"/>
				
			</s:BorderContainer>
		</s:NavigatorContent>
		
		<s:NavigatorContent label="All data">
			
			<components:AllDataTab id="allDataTab"
								 usersData="{usersData}"
								 x="30" y="90"/>
						
		</s:NavigatorContent>
	</mx:TabNavigator>
			
	<s:Panel id="login" includeIn="loginState" x="50" y="50" width="30%" height="30%" title="LOGIN">
		<s:layout>
			<s:VerticalLayout gap="10" paddingTop="15" paddingBottom="15" paddingRight="15" paddingLeft="15"/>		
		</s:layout>
		<s:Label x="26" y="33" text="Username:"/>
		<s:TextInput id="username" x="97" y="23"/>
		<s:Label x="26" y="71" text="Password:"/>
		<s:TextInput id="password" x="97" y="61" displayAsPassword="true"/>
		<s:Button label="Sumbit" click="attemptLogin()"/>
	</s:Panel>
	
</s:Application>
